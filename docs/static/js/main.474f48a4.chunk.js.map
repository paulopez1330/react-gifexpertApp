{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","GifExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"mMAoCeA,EAjCK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEHC,mBAAU,IAFP,mBAEjCC,EAFiC,KAErBC,EAFqB,KAgBzC,OACI,mCACI,sBAAMC,SAVM,SAAEC,GAClBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAACS,GAAD,OAAYP,GAAZ,mBAA4BO,OAC3CN,EAAe,MAMf,SACI,uBACIO,KAAK,OACLC,MAAUT,EACVU,SAlBU,SAAEP,GACxBF,EAAgBE,EAAEQ,OAAOF,e,+BCNpBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEqCC,UAAWH,GAFhD,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,YACnB,MAAO,CACHC,GAF4C,EAAzBA,GAGnBC,MAH4C,EAArBA,MAIvBT,IAJ4C,EAAdU,OAIlBC,iBAAiBX,QAVlB,kBAcZM,GAdY,4CAAH,sDCAPM,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOT,EAAW,EAAXA,IAEtC,OACI,sBAAKa,UAAU,uBAAf,UACI,qBAAKC,IAAQd,EAAMe,IAAQN,IAC3B,kCAAMA,EAAN,WCHCO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNY,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAW,WACPvB,EAASC,GACJuB,MAAM,SAAAC,GACHH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAGtB,CAAEnB,IAEEoB,EDd0BK,CAAczB,GAAlCY,EAFwB,EAE7BL,KAAaY,EAFgB,EAEhBA,QAErB,OACI,qCACI,mCAAOnB,EAAP,OAEEmB,GAAW,wCAEb,qBAAKJ,UAAU,YAAf,SAEQH,EAAOH,KAAK,SAAEiB,GAAF,OACR,cAAC,EAAD,eAESA,GADCA,EAAIhB,aEavBiB,EA3BM,WAAO,IAAD,EAEazC,mBAAS,CAAC,aAFvB,mBAEhB0C,EAFgB,KAEJ3C,EAFI,KAQvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBACA,6BAEQ2C,EAAWnB,KAAK,SAAAoB,GAAG,OACf,cAAC,EAAD,CAEI7B,SAAW6B,GADLA,Y,MCflCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.474f48a4.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ( { setCategories } ) => {\r\n\r\n    const [ inputValue, setInputValue ] = useState( '' );\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue ( e.target.value );\r\n    }\r\n\r\n    const hadleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( (cats) => [ inputValue,  ...cats ] );\r\n            setInputValue( '' );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit = { hadleSubmit }>\r\n                <input\r\n                    type=\"text\"\r\n                    value = { inputValue }\r\n                    onChange = { handleInputChange }\r\n                />\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","\r\n\r\nexport const getGifs = async ( category ) => {\r\n\r\n    const url =  `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=zqr3pe7uxmBFhZ5Ab8zD5r9FTl2dGT0h`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( ( { id, title, images } ) => {\r\n        return {\r\n            id,\r\n            title,\r\n            url: images.downsized_medium.url,\r\n        }\r\n    });\r\n   \r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__fadeIn\" >\r\n            <img src = { url } alt = { title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3> { category } </h3>        \r\n            \r\n            { loading && <p>Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( ( img ) => (\r\n                        <GifGridItem\r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }        \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n    }, [ category ])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['OnePunch']);\r\n/*\r\n    const hadleAdd = () => {\r\n        setCategories( [...categories, 'Hounter'] );\r\n    }\r\n  */\r\n    return ( \r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = { setCategories } />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map( cat => (\r\n                        <GifGrid\r\n                            key={ cat }\r\n                            category={ cat }\r\n                        /> \r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n     );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}